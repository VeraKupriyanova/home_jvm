public class JvmComprehension {// Класс JvmComprehension загружается через подсистему загрузчиков классов ClassLoaders
    //Данные об этом классе перемещаются для хранения в metaspace.

    public static void main(String[] args) {
	// В момент вызова метода main создается фрейм в стеке.
        int i = 1;                      // 1 Во фрейме main создается переменная i со значением 1
        Object o = new Object();        // 2 переменная о создается в стэке фрейма main и хранит в себе ссылку на объект.
										//new Object - новый объект создается для хранения в heap.
		
        Integer ii = 2;                 // 3 создается объект Integer со значением 2,
										// во фрейме main появляется переменная ii со ссылкой на этот объект
        printAll(o, i, ii);             // 4 В стеке создается фрейм printAll
										// и в нем записываются переменные Object o, int i и Integer ii
        System.out.println("finished"); // 7 В стеке создается фрейм println,
										// в котором создается ссылка на объект String со значением "finished".
										// Сам же объект типа String со значением создается для хранения в хипе.
    }
	// Код выполняется строка за строкой, каждый метод компиляруется по очереди в машинный код, интерпритатор
    // интерпретирует машинный код строка за строкой, затем выполняет. Периодически сборщик мусора собирает объекты,
    // которые больше не используются из памяти путем обхода графа достижимых объектов.

    private static void printAll(Object o, int i, Integer ii) {
        Integer uselessVar = 700;                   // 5 в стэке во фрейме printAll для хранения создается  переменная
                                                    // uselessVar, которая хранит в себе ссылку на объект Integer. Сам
                                                    // объект со значением 700 хранится в хипе
        System.out.println(o.toString() + i + ii);  // 6 в стэке фомируется фреймы println и toString. В фрейм println
													//передаются переменные i со значением 1, ii, o, последние из которых хранят ссылки на объекты
													// Object o, Integer ii.
    }
}







